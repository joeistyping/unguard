# Copyright 2023 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener_dynamic
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8081
    filter_chains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              http_filters:
                - name: envoy.filters.http.lua
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                    inline_code: |
                      function envoy_on_request(request_handle)
                        -- empty Lua filter that might be overwritten in LuaPerRoute
                      end
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                  - domains:
                      - "*"
                    name: health_service
                    routes:
                      - match:
                          prefix: /healthz
                        direct_response:
                          status: 503
                        typed_per_filter_config:
                          envoy.filters.http.lua:
                            "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                            source_code:
                              inline_string: |
                                health = (loadfile("/etc/envoy/unguard/health-check.lua"))()

                                function envoy_on_request(request_handle)
                                  local path = request_handle:headers():get(":path")
                                  local result = health(path)
                                  if result then
                                    request_handle:respond({[":status"] = "200"}, "HEALTHY")
                                  else
                                    request_handle:respond({[":status"] = "500"}, "UNHEALTHY")
                                  end
                                end
